server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=3m

spring.rabbitmq.host=rabbitmq.lab.local
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.initial-interval=5000
spring.rabbitmq.listener.simple.retry.max-attempts=10
spring.rabbitmq.listener.simple.retry.max-interval=30000
spring.rabbitmq.listener.simple.retry.multiplier=3.0
spring.rabbitmq.forceStop=true  # devolve as mensagens para a queue quando receber o shutdown

queue.name=teste
queue1.name=teste1

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

management.endpoint.health.probes.enabled=true
#management.health.livenessState.enabled=true
#management.health.readinessState.enabled=true


resilience4j.retry.instances.retryMensagemTeste.max-attempts=3
resilience4j.retry.instances.retryMensagemTeste.wait-duration=2s
#resilience4j.retry.instances.retryMensagemTeste.enable-randomized-wait=true
#resilience4j.retry.instances.retryMensagemTeste.randomized-wait-factor=0.9
resilience4j.retry.metrics.legacy.enabled=true
resilience4j.retry.metrics.enabled=true

#consulta retry http://localhost:8080/actuator/retryevents/retryMensagemTeste


